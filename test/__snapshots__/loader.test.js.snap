// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader should output an understandable error (dart-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

a {
 ^
      Expected newline.
  ╷
1 │ a {
  │   ^
  ╵
  stdin 1:3  root stylesheet
      in absolute_path_to_file (line 1, column 3)],
]
`;

exports[`loader should output an understandable error (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error (dart-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

    some-value
             ^
      Expected "{".
  ╷
2 │     some-value
  │               ^
  ╵
  stdin 2:15  root stylesheet
      in absolute_path_to_file (line 2, column 15)],
]
`;

exports[`loader should output an understandable error (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should output an understandable error (node-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

a {
  ^
      Invalid CSS after "a {": expected "}", was "{}"
      in absolute_path_to_file (line 1, column 4)],
]
`;

exports[`loader should output an understandable error (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error (node-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

    some-value
   ^
      Property "some-value" must be followed by a ':'
      in absolute_path_to_file (line 2, column 5)],
]
`;

exports[`loader should output an understandable error (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when a file could not be found (dart-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "does-not-exist"
       ^
      Can't find stylesheet to import.
  ╷
1 │ @import "does-not-exist"
  │         ^^^^^^^^^^^^^^^^
  ╵
  stdin 1:9  root stylesheet
      in absolute_path_to_file (line 1, column 9)],
]
`;

exports[`loader should output an understandable error when a file could not be found (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when a file could not be found (dart-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "does-not-exist";
       ^
      Can't find stylesheet to import.
  ╷
1 │ @import "does-not-exist";
  │         ^^^^^^^^^^^^^^^^
  ╵
  stdin 1:9  root stylesheet
      in absolute_path_to_file (line 1, column 9)],
]
`;

exports[`loader should output an understandable error when a file could not be found (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when a file could not be found (node-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "does-not-exist"
^
      File to import not found or unreadable: does-not-exist.
      in absolute_path_to_file (line 1, column 1)],
]
`;

exports[`loader should output an understandable error when a file could not be found (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when a file could not be found (node-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "does-not-exist";
^
      File to import not found or unreadable: does-not-exist.
      in absolute_path_to_file (line 1, column 1)],
]
`;

exports[`loader should output an understandable error when a file could not be found (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when the problem in "@import" (dart-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

a {
 ^
      Expected newline.
  ╷
1 │ a {
  │   ^
  ╵
  test/sass/error.sass 1:3  @import
  stdin 1:9                 root stylesheet
      in absolute_path_to_file (line 1, column 3)],
]
`;

exports[`loader should output an understandable error when the problem in "@import" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when the problem in "@import" (dart-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

    some-value
             ^
      Expected "{".
  ╷
2 │     some-value
  │               ^
  ╵
  test/scss/error.scss 2:15  @import
  stdin 1:9                  root stylesheet
      in absolute_path_to_file (line 2, column 15)],
]
`;

exports[`loader should output an understandable error when the problem in "@import" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when the problem in "@import" (node-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

a {
  ^
      Invalid CSS after "a {": expected "}", was "{}"
      in absolute_path_to_file (line 1, column 4)],
]
`;

exports[`loader should output an understandable error when the problem in "@import" (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should output an understandable error when the problem in "@import" (node-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

    some-value
   ^
      Property "some-value" must be followed by a ':'
      in absolute_path_to_file (line 2, column 5)],
]
`;

exports[`loader should output an understandable error when the problem in "@import" (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should throw an error with a explicit file and a file does not exist (dart-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "./another/_module.scss"
       ^
      Can't find stylesheet to import.
  ╷
1 │ @import "./another/_module.scss"
  │         ^^^^^^^^^^^^^^^^^^^^^^^^
  ╵
  stdin 1:9  root stylesheet
      in absolute_path_to_file (line 1, column 9)],
]
`;

exports[`loader should throw an error with a explicit file and a file does not exist (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should throw an error with a explicit file and a file does not exist (dart-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "./another/_module.scss";
       ^
      Can't find stylesheet to import.
  ╷
1 │ @import "./another/_module.scss";
  │         ^^^^^^^^^^^^^^^^^^^^^^^^
  ╵
  stdin 1:9  root stylesheet
      in absolute_path_to_file (line 1, column 9)],
]
`;

exports[`loader should throw an error with a explicit file and a file does not exist (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should throw an error with a explicit file and a file does not exist (node-sass) (sass): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "./another/_module.scss"
^
      File to import not found or unreadable: ./another/_module.scss.
      in absolute_path_to_file (line 1, column 1)],
]
`;

exports[`loader should throw an error with a explicit file and a file does not exist (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should throw an error with a explicit file and a file does not exist (node-sass) (scss): errors 1`] = `
Array [
  [ModuleBuildError: Module build failed (from ../src/cjs.js):

@import "./another/_module.scss";
^
      File to import not found or unreadable: ./another/_module.scss.
      in absolute_path_to_file (line 1, column 1)],
]
`;

exports[`loader should throw an error with a explicit file and a file does not exist (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and ignore all css "@import" at-rules (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and output the "compressed" outputStyle when "mode" is production (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "_index" file in package (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "custom-sass" field (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value already in the "mainFiles" resolve option (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "index" file in package when the "index" value is not in the "mainFiles" resolve option (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value already in the "mainFields" resolve option (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "main" field when the "main" value is not in the "mainFields" resolve option (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "sass" field (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "sass" field (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "sass" field (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "sass" field (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "sass" field (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "sass" field (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "sass" field (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "sass" field (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "style" field (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "style" field (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "style" field (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "style" field (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work and use the "style" field (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work and use the "style" field (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work and use the "style" field (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work and use the "style" field (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules starting with "_" (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules with extensions (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when "@import" at-rules without extensions and do not start with "_" (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work when an "@import" at-rule from scoped npm packages (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an "@import" at-rle from other language style (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an alias (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an alias (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an alias (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an alias (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an alias (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an alias (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an alias (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an alias (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an empty file (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an empty file (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an empty file (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an empty file (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with an empty file (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with an empty file (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with an empty file (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with an empty file (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with difference "@import" at-rules (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules without quotes (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules without quotes (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules without quotes (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with multiple "@import" at-rules without quotes (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap" package, import as a package (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, directly import (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "bootstrap-sass" package, import as a package (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a function (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "data" option as a string (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as a function (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (sass): errors 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (sass): warnings 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (scss): errors 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (dart-sass) (scss): warnings 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (sass): errors 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (sass): warnings 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (scss): errors 2`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "functions" option as an object (node-sass) (scss): warnings 2`] = `Array []`;

exports[`loader should work with the "importer" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "importer" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "importer" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "importer" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "importer" option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "importer" option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "importer" option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "importer" option (node-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (node-sass) (sass): errors 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (node-sass) (sass): warnings 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (node-sass) (scss): errors 1`] = `Array []`;

exports[`loader should work with the "includePaths" option (node-sass) (scss): warnings 1`] = `Array []`;
